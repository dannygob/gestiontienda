{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "959720e1c994821dc5276117f122d4ea",
    "entities": [
      {
        "tableName": "customers",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `email` TEXT, `phone` TEXT, `address` TEXT, `taxId` TEXT, `loyaltyPoints` INTEGER NOT NULL, `creditLimit` REAL NOT NULL, `currentCredit` REAL NOT NULL, `lastPurchaseDate` INTEGER, `totalPurchases` REAL NOT NULL, `purchaseCount` INTEGER NOT NULL, `status` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "taxId",
            "columnName": "taxId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "loyaltyPoints",
            "columnName": "loyaltyPoints",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "creditLimit",
            "columnName": "creditLimit",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currentCredit",
            "columnName": "currentCredit",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "lastPurchaseDate",
            "columnName": "lastPurchaseDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "totalPurchases",
            "columnName": "totalPurchases",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "purchaseCount",
            "columnName": "purchaseCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "customer_credits",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `customerId` INTEGER NOT NULL, `amount` REAL NOT NULL, `remainingAmount` REAL NOT NULL, `dueDate` INTEGER NOT NULL, `status` TEXT NOT NULL, `notes` TEXT, `createdAt` INTEGER NOT NULL, FOREIGN KEY(`customerId`) REFERENCES `customers`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerId",
            "columnName": "customerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "remainingAmount",
            "columnName": "remainingAmount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "dueDate",
            "columnName": "dueDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_customer_credits_customerId",
            "unique": false,
            "columnNames": [
              "customerId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_customer_credits_customerId` ON `${TABLE_NAME}` (`customerId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "customers",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "customerId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "loyalty_config",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `pointsPerCurrency` REAL NOT NULL, `minimumForRedemption` INTEGER NOT NULL, `redemptionRate` REAL NOT NULL, `expirationMonths` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pointsPerCurrency",
            "columnName": "pointsPerCurrency",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "minimumForRedemption",
            "columnName": "minimumForRedemption",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "redemptionRate",
            "columnName": "redemptionRate",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "expirationMonths",
            "columnName": "expirationMonths",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "store_config",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `storeName` TEXT NOT NULL, `address` TEXT, `phone` TEXT, `email` TEXT, `taxId` TEXT, `currencyCode` TEXT NOT NULL, `taxRate` REAL NOT NULL, `defaultCreditLimit` REAL NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "storeName",
            "columnName": "storeName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "taxId",
            "columnName": "taxId",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "currencyCode",
            "columnName": "currencyCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "taxRate",
            "columnName": "taxRate",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "defaultCreditLimit",
            "columnName": "defaultCreditLimit",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "user_roles",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` TEXT NOT NULL, `role` TEXT NOT NULL, `permissions` TEXT NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, PRIMARY KEY(`userId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "permissions",
            "columnName": "permissions",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "sales",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `customerId` INTEGER, `total` REAL NOT NULL, `subtotal` REAL NOT NULL, `tax` REAL NOT NULL, `discount` REAL NOT NULL, `paymentMethod` TEXT NOT NULL, `status` TEXT NOT NULL, `notes` TEXT, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "customerId",
            "columnName": "customerId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "total",
            "columnName": "total",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "subtotal",
            "columnName": "subtotal",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "tax",
            "columnName": "tax",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "discount",
            "columnName": "discount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "paymentMethod",
            "columnName": "paymentMethod",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "notes",
            "columnName": "notes",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "sale_items",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `saleId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, `quantity` INTEGER NOT NULL, `priceAtSale` REAL NOT NULL, FOREIGN KEY(`productId`) REFERENCES `products`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "saleId",
            "columnName": "saleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "priceAtSale",
            "columnName": "priceAtSale",
            "affinity": "REAL",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_sale_items_productId",
            "unique": false,
            "columnNames": [
              "productId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_sale_items_productId` ON `${TABLE_NAME}` (`productId`)"
          },
          {
            "name": "index_sale_items_saleId",
            "unique": false,
            "columnNames": [
              "saleId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_sale_items_saleId` ON `${TABLE_NAME}` (`saleId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "products",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "productId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "products",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `description` TEXT, `barcode` TEXT, `categoryId` INTEGER, `price` REAL NOT NULL, `purchasePrice` REAL NOT NULL, `stock` INTEGER NOT NULL, `reorderPoint` INTEGER NOT NULL, `unit` TEXT NOT NULL, `imageUrl` TEXT, `expirationDate` INTEGER, `isActive` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "barcode",
            "columnName": "barcode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "purchasePrice",
            "columnName": "purchasePrice",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "stock",
            "columnName": "stock",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "reorderPoint",
            "columnName": "reorderPoint",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "unit",
            "columnName": "unit",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "imageUrl",
            "columnName": "imageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "expirationDate",
            "columnName": "expirationDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [
      {
        "viewName": "ProductSalesStatsEntity",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT \n        p.id as productId,\n        p.name as productName,\n        SUM(si.quantity) as quantitySold,\n        SUM(si.priceAtSale * si.quantity) as totalRevenue,\n        AVG(si.priceAtSale) as averagePrice,\n        SUM((si.priceAtSale - p.purchasePrice) * si.quantity) as profit\n    FROM sale_items si\n    JOIN products p ON p.id = si.productId\n    JOIN sales s ON s.id = si.saleId\n    GROUP BY p.id"
      },
      {
        "viewName": "PeriodStatsEntity",
        "createSql": "CREATE VIEW `${VIEW_NAME}` AS SELECT \n        SUM(s.total) as totalSales,\n        COUNT(DISTINCT s.id) as totalTransactions,\n        SUM((si.priceAtSale - p.purchasePrice) * si.quantity) as totalProfit,\n        SUM(si.quantity) as totalItems\n    FROM sales s\n    LEFT JOIN sale_items si ON s.id = si.saleId\n    LEFT JOIN products p ON si.productId = p.id"
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '959720e1c994821dc5276117f122d4ea')"
    ]
  }
}